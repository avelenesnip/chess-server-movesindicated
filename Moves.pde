void Rmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);
}//.............................................





void Bmoves() {//..............................
  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................






void Nmoves() {//..............................
  rect((col1+2)*100, (row1+1)*100, 100, 100);
  rect((col1+1)*100, (row1+2)*100, 100, 100);
  rect((col1-2)*100, (row1-1)*100, 100, 100);
  rect((col1-1)*100, (row1-2)*100, 100, 100);
  rect((col1+2)*100, (row1-1)*100, 100, 100);
  rect((col1+1)*100, (row1-2)*100, 100, 100);
  rect((col1-2)*100, (row1+1)*100, 100, 100);
  rect((col1-1)*100, (row1+2)*100, 100, 100);
}//.............................................




void Qmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1+2)*100, row1*100, 100, 100);
  rect((col1+3)*100, row1*100, 100, 100);
  rect((col1+4)*100, row1*100, 100, 100);
  rect((col1+5)*100, row1*100, 100, 100);
  rect((col1+6)*100, row1*100, 100, 100);
  rect((col1+7)*100, row1*100, 100, 100);
  rect((col1+8)*100, row1*100, 100, 100);

  rect(col1*100, (row1+1)*100, 100, 100);
  rect(col1*100, (row1+2)*100, 100, 100);
  rect(col1*100, (row1+3)*100, 100, 100);
  rect(col1*100, (row1+4)*100, 100, 100);
  rect(col1*100, (row1+5)*100, 100, 100);
  rect(col1*100, (row1+6)*100, 100, 100);
  rect(col1*100, (row1+7)*100, 100, 100);
  rect(col1*100, (row1+8)*100, 100, 100);


  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1-2)*100, row1*100, 100, 100);
  rect((col1-3)*100, row1*100, 100, 100);
  rect((col1-4)*100, row1*100, 100, 100);
  rect((col1-5)*100, row1*100, 100, 100);
  rect((col1-6)*100, row1*100, 100, 100);
  rect((col1-7)*100, row1*100, 100, 100);
  rect((col1-8)*100, row1*100, 100, 100);

  rect(col1*100, (row1-1)*100, 100, 100);
  rect(col1*100, (row1-2)*100, 100, 100);
  rect(col1*100, (row1-3)*100, 100, 100);
  rect(col1*100, (row1-4)*100, 100, 100);
  rect(col1*100, (row1-5)*100, 100, 100);
  rect(col1*100, (row1-6)*100, 100, 100);
  rect(col1*100, (row1-7)*100, 100, 100);
  rect(col1*100, (row1-8)*100, 100, 100);

  rect((col1+1)*100, (row1+1)*100, 100, 100);
  rect((col1+2)*100, (row1+2)*100, 100, 100);
  rect((col1+3)*100, (row1+3)*100, 100, 100);
  rect((col1+4)*100, (row1+4)*100, 100, 100);
  rect((col1+5)*100, (row1+5)*100, 100, 100);
  rect((col1+6)*100, (row1+6)*100, 100, 100);
  rect((col1+7)*100, (row1+7)*100, 100, 100);
  rect((col1+8)*100, (row1+8)*100, 100, 100);

  rect((col1-1)*100, (row1+1)*100, 100, 100);
  rect((col1-2)*100, (row1+2)*100, 100, 100);
  rect((col1-3)*100, (row1+3)*100, 100, 100);
  rect((col1-4)*100, (row1+4)*100, 100, 100);
  rect((col1-5)*100, (row1+5)*100, 100, 100);
  rect((col1-6)*100, (row1+6)*100, 100, 100);
  rect((col1-7)*100, (row1+7)*100, 100, 100);
  rect((col1-8)*100, (row1+8)*100, 100, 100);

  rect((col1+1)*100, (row1-1)*100, 100, 100);
  rect((col1+2)*100, (row1-2)*100, 100, 100);
  rect((col1+3)*100, (row1-3)*100, 100, 100);
  rect((col1+4)*100, (row1-4)*100, 100, 100);
  rect((col1+5)*100, (row1-5)*100, 100, 100);
  rect((col1+6)*100, (row1-6)*100, 100, 100);
  rect((col1+7)*100, (row1-7)*100, 100, 100);
  rect((col1+8)*100, (row1-8)*100, 100, 100);

  rect((col1-1)*100, (row1-1)*100, 100, 100);
  rect((col1-2)*100, (row1-2)*100, 100, 100);
  rect((col1-3)*100, (row1-3)*100, 100, 100);
  rect((col1-4)*100, (row1-4)*100, 100, 100);
  rect((col1-5)*100, (row1-5)*100, 100, 100);
  rect((col1-6)*100, (row1-6)*100, 100, 100);
  rect((col1-7)*100, (row1-7)*100, 100, 100);
  rect((col1-8)*100, (row1-8)*100, 100, 100);
}//.............................................




void Kmoves() {//..............................
  rect((col1+1)*100, row1*100, 100, 100);
  rect((col1-1)*100, row1*100, 100, 100);
  rect((col1)*100, (row1+1)*100, 100, 100);
  rect((col1)*100, (row1-1)*100, 100, 100);
}//.............................................




void Pmoves() {//..............................

  if (row1 == 1) {
    rect(col1*100, (row1+2)*100, 100, 100);
  }
  rect(col1*100, (row1+1)*100, 100, 100);
  
}//.............................................






  
  
  
  
